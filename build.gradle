buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "${project.minecraftVersion}-${project.modVersion}"
group = "com.${project.groupId}.${project.modId}"
archivesBaseName = project.modId
java.toolchain.languageVersion = JavaLanguageVersion.of(16)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

mixin {
    add sourceSets.main, "${project.modId}.refmap.json"
}

minecraft {
    mappings channel: 'official', version: '1.17.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', "${project.modId}", '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            mods {
                self {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "Curios Maven"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "JEI Maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "CTM Maven"
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "GeckoLib Maven"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}"

    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
    }

    implementation  fg.deobf('software.bernie.geckolib:geckolib-1.17.1:3.0.2')

//    compileOnly fg.deobf("mezz.jei:jei-1.17.1-8.1.0.26:api")
//    runtimeOnly fg.deobf("mezz.jei:jei-1.17.1-8.1.0.26")

//    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.1")
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.1")

//    runtimeOnly fg.deobf("team.chisel.ctm:CTM:MC1.16.1-1.1.1.5")

}

jar {
    manifest {
        attributes([
            "Specification-Title": "Esoterica",
            "Specification-Vendor": "Project Esoterica",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Project Esoterica",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "${project.modId}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
